name: Monthly Maintenance

on:
  schedule:
    # Run on the 1st day of every month at 2:00 AM UTC
    - cron: '0 2 1 * *'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          npm install -g markdownlint-cli
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Run markdown linting
        run: |
          chmod +x scripts/lint-markdown.sh
          scripts/lint-markdown.sh
          
      - name: Run link checking
        run: |
          npm install -g @lycheeverse/lychee
          lychee --no-progress --verbose --accept 200,999 \
            --max-redirects 5 --retry-wait-time 2 --timeout 20 \
            --exclude-path .lycheeignore README.md
        continue-on-error: true
        
      - name: Update statistics
        run: |
          python scripts/update-stats.py
        env:
          GITHUB_USERNAME: a-ariff
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check repository health
        run: |
          echo "## ðŸ“Š Monthly Repository Health Report" > maintenance-report.md
          echo "Generated on: $(date)" >> maintenance-report.md
          echo "" >> maintenance-report.md
          
          # Check file sizes
          echo "### File Sizes" >> maintenance-report.md
          echo '```' >> maintenance-report.md
          wc -l README.md >> maintenance-report.md
          echo '```' >> maintenance-report.md
          echo "" >> maintenance-report.md
          
          # Check for large files
          echo "### Large Files Check" >> maintenance-report.md
          echo '```' >> maintenance-report.md
          find . -type f -size +1M -not -path "./.git/*" | head -10 >> maintenance-report.md || echo "No large files found" >> maintenance-report.md
          echo '```' >> maintenance-report.md
          echo "" >> maintenance-report.md
          
          # Recent commits
          echo "### Recent Activity" >> maintenance-report.md
          echo '```' >> maintenance-report.md
          git log --oneline -5 >> maintenance-report.md
          echo '```' >> maintenance-report.md
          
      - name: Create maintenance issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('maintenance-report.md', 'utf8');
            
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'maintenance',
              state: 'open'
            });
            
            // Close previous maintenance issues
            for (const issue of issues) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
            
            // Create new maintenance issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”§ Monthly Maintenance Report - ${new Date().toISOString().slice(0, 7)}`,
              body: report,
              labels: ['maintenance', 'automated']
            });
            
      - name: Commit any changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ”§ Monthly maintenance - $(date +'%Y-%m-%d')" || exit 0
            git push
          fi